name: Build and Deploy to Docker Hub and Render

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: rennybaez/holamundo

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Trigger Render deploy via API (try with `{}`)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          set -euo pipefail
          echo "Triggering deploy for service: $RENDER_SERVICE_ID (with {})"
          http_code=$(curl -sS -o /tmp/resp.json -w "%{http_code}" \
            -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            --data-raw '{}')
          echo "HTTP $http_code"
          echo "Response:"; cat /tmp/resp.json
          if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
            exit 0
          fi
          exit 2

      - name: Retry Render deploy via API (no body)
        if: failure()        # solo si falló el paso anterior
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          set -euo pipefail
          echo "Retrying deploy for service: $RENDER_SERVICE_ID (no body)"
          http_code=$(curl -sS -o /tmp/resp2.json -w "%{http_code}" \
            -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json")
          echo "HTTP $http_code"
          echo "Response:"; cat /tmp/resp2.json
          test "$http_code" -ge 200 -a "$http_code" -lt 300

      # (OPCIONAL) Fallback por Deploy Hook si no quieres usar API:
      # Crea el secret RENDER_DEPLOY_HOOK con la URL del hook.
      - name: Fallback via Deploy Hook
        if: failure() && ${{ secrets.RENDER_DEPLOY_HOOK != '' }}
        run: |
          echo "Triggering Deploy Hook…"
          curl -fsS -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
          echo "Render deploy triggered via Deploy Hook."
